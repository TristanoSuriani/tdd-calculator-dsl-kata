@startuml

package Expression {

  interface Expression {
    +evaluate(): Number
  }

  interface Operation {
      -Operator operator (1..1)
      -Expression operands (1..n)
      --
      +evaluate(): Number
    }

  class Number {
    -BigDecimal value (1..1)
    --
    +evaluate(): Number
  }

  enum Operator {
    PLUS,
    MINUS,
    MULTIPLIED_BY,
    DIVIDED_BY
  }

  Operation o-down- Expression
  Operation *-down- Operator
  Number -up-|> Expression
  Operation -up-|> Expression
}

package Calculator {

  class Calculator {
    -Lexer lexer(1..1)
    -ShuntingYardTokenStreamNormaliser normaliser(1..1)
    -ReversePolishNotationInterpreter rpnInterpreter(1..1)
    --
    +evaluate(text: String): String
  }

  class ShuntingYardTokenStreamNormaliser {
    +normalise(tokens: List<Token>): List<Token>
  }

  class ReversePolishNotationInterpreter {
    +parse(tokens: List<Token>): Expression
  }

  class Lexer {
    +lex(text: String): List<Token>
  }

  class Token {
    -TokenType type (1..1)
    -String value (1..1)
  }

  class TokenType {
    IDENTIFIER,
    L_PAREN,
    R_PAREN,
    NUMBER,
    OPERATOR
  }

  Calculator *-down- Lexer
  Calculator *-down- ReversePolishNotationInterpreter
  Calculator *-down- ShuntingYardTokenStreamNormaliser
  ReversePolishNotationInterpreter -right-> Expression
  Token *-down- TokenType
  Lexer -down-> Token
  Expression -left-> Number
}


@enduml